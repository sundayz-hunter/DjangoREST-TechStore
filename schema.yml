openapi: 3.0.3
info:
  title: Tech Store API
  version: 1.0.0
  description: A RESTful API for managing products, orders, and users in an online
    store.Provides features such as stock management, order tracking, and secure authentication.
paths:
  /api/v1/auth/get-token:
    post:
      operationId: api_v1_auth_get_token_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/orders/:
    get:
      operationId: api_v1_orders_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_v1_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/{order_id}/:
    get:
      operationId: api_v1_orders_retrieve
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_orders_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_v1_orders_partial_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_v1_orders_destroy
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductClient'
          description: ''
    post:
      operationId: api_v1_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductClient'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClient'
          description: ''
  /api/v1/products-info/:
    get:
      operationId: api_v1_products_info_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInfo'
          description: ''
    post:
      operationId: api_v1_products_info_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductInfo'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: ''
  /api/v1/products-info/{id}/:
    get:
      operationId: api_v1_products_info_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: ''
    put:
      operationId: api_v1_products_info_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductInfo'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: ''
    patch:
      operationId: api_v1_products_info_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductInfo'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: ''
    delete:
      operationId: api_v1_products_info_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/products/{id}/:
    get:
      operationId: api_v1_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClient'
          description: ''
    put:
      operationId: api_v1_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductClient'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClient'
          description: ''
    patch:
      operationId: api_v1_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductClient'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClient'
          description: ''
    delete:
      operationId: api_v1_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/out_of_stock/:
    get:
      operationId: api_v1_products_out_of_stock_retrieve
      description: |-
        Endpoint out of stock products
        URL : /api/products/out_of_stock/
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClient'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Order:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        total_price:
          type: string
          readOnly: true
      required:
      - created_at
      - items
      - total_price
      - updated_at
      - user
    OrderItem:
      type: object
      properties:
        product_name:
          type: string
        product_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        item_subtotal:
          type: string
          readOnly: true
      required:
      - item_subtotal
      - product_name
      - product_price
      - quantity
    PatchedOrder:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        total_price:
          type: string
          readOnly: true
    PatchedProductClient:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        category:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
    PatchedProductInfo:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        count:
          type: integer
        max_price:
          type: number
          format: double
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - id
      - name
      - price
    ProductClient:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        category:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
      required:
      - name
      - price
    ProductInfo:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        count:
          type: integer
        max_price:
          type: number
          format: double
      required:
      - count
      - max_price
      - products
    StatusEnum:
      enum:
      - Pending
      - Confirmed
      - Cancelled
      type: string
      description: |-
        * `Pending` - Pending
        * `Confirmed` - Confirmed
        * `Cancelled` - Cancelled
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: http
      scheme: bearer
